// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Main.JSON_Classes.LootFarm;
//
//    var lootUserInventory = LootUserInventory.FromJson(jsonString);

namespace Main.JSON_Classes.LootFarm
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Main.Support;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class LootUserInventory
    {
        [JsonProperty("timestamp")]
        public long Timestamp { get; set; }

        [JsonProperty("bonus")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long Bonus { get; set; }

        [JsonProperty("result")]
        public Dictionary<string, Result> Result { get; set; }

    }

    public partial class Result
    {
        /// <summary>
        /// Name of item
        /// </summary>
        [JsonProperty("n")]
        public string N { get; set; }

        [JsonProperty("g")]
        public long G { get; set; }

        [JsonProperty("cl")]
        public string Cl { get; set; }

        [JsonProperty("u")]
        public List<U> U { get; set; }

        /// <summary>
        /// Steam price rate
        /// </summary>
        [JsonProperty("pg")]
        public long Pg { get; set; }

        /// <summary>
        /// Tradable count - сколько ещё можно залить
        /// </summary>
        [JsonProperty("tk")]
        public long Tk { get; set; }

        /// <summary>
        /// Max count on site
        /// </summary>
        [JsonProperty("os")]
        public long Os { get; set; }

        /// <summary>
        /// Price of item
        /// </summary>
        [JsonProperty("p")]
        public long P { get; set; }
    }

    public partial class U
    {
        [JsonProperty("id")]
        public string Id { get; set; }

        [JsonProperty("f")]
        public long F { get; set; }

        [JsonProperty("l")]
        public string L { get; set; }

        [JsonProperty("p")]
        public long P { get; set; }

        [JsonProperty("tr")]
        public long Tr { get; set; }

        [JsonProperty("s", NullValueHandling = NullValueHandling.Ignore)]
        public List<string> S { get; set; }
    }

    public partial class LootUserInventory
    {
        public static LootUserInventory FromJson(string json) => JsonConvert.DeserializeObject<LootUserInventory>(json, Converter.Settings);
    }

    public static class SerializeInventory
    {
        public static string ToJson(this LootUserInventory self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }
}
