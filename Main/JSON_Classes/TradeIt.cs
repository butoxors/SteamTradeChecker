// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Main;
//
//    var tradeit = Tradeit.FromJson(jsonString);

namespace Main
{
    using System;
    using System.Collections.Generic;
    using Support;
    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class TradeIt
    {
        [JsonProperty("570")]
        public The570 The570 { get; set; }

        [JsonProperty("steamid")]
        public string Steamid { get; set; }

        [JsonProperty("timestamp")]
        public long Timestamp { get; set; }

        [JsonProperty("value")]
        public long Value { get; set; }
    }

    public partial class The570
    {
        [JsonProperty("items")]
        public Dictionary<string, Item> Items { get; set; }

        [JsonProperty("gems")]
        public List<Gem> Gems { get; set; }
    }

    public partial class Gem
    {
        [JsonProperty("l")]
        public string L { get; set; }

        [JsonProperty("n")]
        public string N { get; set; }

        [JsonProperty("t")]
        public string T { get; set; }
    }

    public partial class Item
    {
        [JsonProperty("d")]
        public List<Dd> Dd { get; set; }

        [JsonProperty("m", NullValueHandling = NullValueHandling.Ignore)]
        public M M { get; set; }

        [JsonProperty("p")]
        public long P { get; set; }

        [JsonProperty("a")]
        public long A { get; set; }

        [JsonProperty("x")]
        public long X { get; set; }

        [JsonProperty("q")]
        public long Q { get; set; }

        [JsonProperty("hi")]
        public long Hi { get; set; }
    }

    public partial class Dd
    {
        [JsonProperty("i")]
        public string I { get; set; }

        [JsonProperty("t", NullValueHandling = NullValueHandling.Ignore)]
        public List<long> T { get; set; }
    }

    public partial class M
    {
        [JsonProperty("p", NullValueHandling = NullValueHandling.Ignore)]
        public long? P { get; set; }

        [JsonProperty("r", NullValueHandling = NullValueHandling.Ignore)]
        public long? R { get; set; }

        [JsonProperty("b", NullValueHandling = NullValueHandling.Ignore)]
        public long? B { get; set; }

        [JsonProperty("s", NullValueHandling = NullValueHandling.Ignore)]
        public long? S { get; set; }

        [JsonProperty("t", NullValueHandling = NullValueHandling.Ignore)]
        public long? T { get; set; }

        [JsonProperty("h", NullValueHandling = NullValueHandling.Ignore)]
        public long? H { get; set; }
    }

    public partial class TradeIt
    {
        public static List<TradeIt> FromJson(string json) => JsonConvert.DeserializeObject<List<TradeIt>>(json, Converter.Settings);
    }

    public static class SerializeTradeIt
    {
        public static string ToJson(this List<TradeIt> self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

}
