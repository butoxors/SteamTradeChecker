// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using Main.CookieDef;
//
//    var steamCookie = SteamCookie.FromJson(jsonString);

namespace Main.CookieDef
{
    using System;
    using System.Collections.Generic;
    using Main.Support;
    using Newtonsoft.Json;

    public partial class SteamCookie
    {
        [JsonProperty("domain")]
        public string Domain { get; set; }

        [JsonProperty("expirationDate", NullValueHandling = NullValueHandling.Ignore)]
        public double? ExpirationDate { get; set; }

        [JsonProperty("hostOnly")]
        public bool HostOnly { get; set; }

        [JsonProperty("httpOnly")]
        public bool HttpOnly { get; set; }

        [JsonProperty("name")]
        public string Name { get; set; }

        [JsonProperty("path")]
        public string Path { get; set; }

        [JsonProperty("sameSite")]
        public string SameSite { get; set; }

        [JsonProperty("secure")]
        public bool Secure { get; set; }

        [JsonProperty("session")]
        public bool Session { get; set; }

        [JsonProperty("storeId")]
        [JsonConverter(typeof(ParseStringConverter))]
        public long StoreId { get; set; }

        [JsonProperty("value")]
        public string Value { get; set; }

        [JsonProperty("id")]
        public long Id { get; set; }
    }


    public partial class SteamCookie
    {
        public static List<SteamCookie> FromJson(string json) => JsonConvert.DeserializeObject<List<SteamCookie>>(json, Converter.Settings);
    }
}
